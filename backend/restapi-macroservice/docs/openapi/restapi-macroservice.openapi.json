{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a welcome message from the Gift service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Returns the welcome message for the Gift microservice",
        "tags": ["Gift"]
      }
    },
    "/google-auth": {
      "get": {
        "operationId": "AppController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Redirects to Google OAuth URL"
          }
        },
        "summary": "Redirects to Google OAuth authentication",
        "tags": ["Gift"]
      }
    },
    "/google-callback": {
      "get": {
        "operationId": "AppController_googleAuthCallback",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redirects to login page after successful authentication"
          }
        },
        "summary": "Handles Google OAuth callback",
        "tags": ["Gift"]
      }
    },
    "/restapi/stalking-request": {
      "post": {
        "operationId": "RestApiController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StalkingAnalyzeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis requested"
          }
        },
        "summary": "Request stalking analysis for provided social profiles",
        "tags": ["restapi"]
      }
    },
    "/restapi/send-message": {
      "post": {
        "operationId": "RestApiController_sendMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message accepted"
          }
        },
        "summary": "Send chat messages to the system",
        "tags": ["restapi"]
      }
    },
    "/auth/google/url": {
      "get": {
        "operationId": "AuthController_getGoogleAuthUrl",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns Google OAuth authorization URL"
          }
        },
        "summary": "Get Google OAuth URL",
        "tags": ["auth"]
      }
    },
    "/auth/google/callback": {
      "post": {
        "operationId": "AuthController_googleCallback",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sets JWT token in httpOnly cookie and returns user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        },
        "summary": "Handle Google OAuth callback",
        "tags": ["auth"]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        },
        "summary": "Logout user by clearing auth cookie",
        "tags": ["auth"]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns current user info"
          }
        },
        "summary": "Get current user from cookie",
        "tags": ["auth"]
      }
    },
    "/chats": {
      "get": {
        "operationId": "ChatController_getUserChats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns list of user's chats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get user's chat history",
        "tags": ["chats"]
      }
    },
    "/sse": {
      "get": {
        "operationId": "SseController_sse",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "query",
            "description": "Client identifier to register for SSE",
            "schema": {
              "example": "client-123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event stream of SSE messages"
          }
        },
        "summary": "Subscribe to server-sent events stream",
        "tags": ["sse"]
      }
    }
  },
  "info": {
    "title": "AI Present Finder - REST API",
    "description": "REST API for interacting with microservices: stalking requests, sending chat messages and streaming events via SSE.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "StalkingAnalyzeRequestDto": {
        "type": "object",
        "properties": {
          "instagramUrl": {
            "type": "string",
            "description": "Instagram profile URL",
            "example": "https://instagram.com/example"
          },
          "tiktokUrl": {
            "type": "string",
            "description": "TikTok profile URL",
            "example": "https://tiktok.com/@example"
          },
          "xUrl": {
            "type": "string",
            "description": "X (Twitter) profile URL",
            "example": "https://x.com/example"
          },
          "occasion": {
            "type": "string",
            "description": "Occasion",
            "example": "birthday"
          },
          "chatId": {
            "type": "string",
            "description": "Chat identifier",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        },
        "required": ["occasion", "chatId"]
      },
      "ChatMessageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique message identifier",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "content": {
            "type": "string",
            "description": "Message content",
            "example": "Hello!"
          },
          "sender": {
            "type": "string",
            "description": "Message sender",
            "enum": ["user", "assistant"],
            "example": "user"
          }
        },
        "required": ["id", "content", "sender"]
      },
      "SendMessageDto": {
        "type": "object",
        "properties": {
          "messages": {
            "description": "Messages in the conversation",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessageDto"
            }
          },
          "chatId": {
            "type": "string",
            "description": "Chat identifier",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        },
        "required": ["messages", "chatId"]
      },
      "GoogleAuthDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Google OAuth authorization code",
            "example": "4/0AY0e-g7..."
          }
        },
        "required": ["code"]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "description": "User information"
          }
        },
        "required": ["accessToken", "user"]
      },
      "ChatDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "title": { "type": "string" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "title", "updatedAt"]
      },
      "ChatsResponseDto": {
        "type": "object",
        "properties": {
          "chats": {
            "description": "List of user's chats",
            "items": {
              "$ref": "#/components/schemas/ChatDto"
            },
            "type": "array"
          }
        },
        "required": ["chats"]
      },
      "SseChatbotMessageDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["chatbot-message"],
            "example": "chatbot-message"
          },
          "message": {
            "description": "Chat message from the bot",
            "example": {
              "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "content": "Hello!",
              "sender": "user"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/ChatMessageDto"
              }
            ]
          }
        },
        "required": ["type", "message"]
      },
      "SseChatInterviewCompletedDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["chat-interview-completed"],
            "example": "chat-interview-completed"
          }
        },
        "required": ["type"]
      },
      "SseChatInappropriateRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["chat-inappropriate-request"],
            "example": "chat-inappropriate-request"
          },
          "reason": {
            "type": "string",
            "description": "Reason why the request was inappropriate",
            "example": "inappropriate content"
          }
        },
        "required": ["type", "reason"]
      },
      "PriceDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Price value",
            "example": 10
          },
          "label": {
            "type": "string",
            "description": "Price label",
            "example": "10"
          },
          "currency": {
            "type": "string",
            "description": "Currency",
            "example": "USD"
          },
          "negotiable": {
            "type": "boolean",
            "description": "Whether price is negotiable",
            "example": false
          }
        },
        "required": ["value", "label", "currency", "negotiable"]
      },
      "ListingDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Image URL",
            "example": "https://example.com/image.jpg"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Book"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "Great book"
          },
          "link": {
            "type": "string",
            "description": "Link",
            "example": "https://example.com/book"
          },
          "price": {
            "description": "Price",
            "example": {
              "value": 10,
              "label": "10",
              "currency": "USD",
              "negotiable": false
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceDto"
              }
            ]
          }
        },
        "required": ["image", "title", "description", "link", "price"]
      },
      "SseGiftReadyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["gift-ready"],
            "example": "gift-ready"
          },
          "data": {
            "description": "Gift ideas payload",
            "example": {
              "giftIdeas": [
                {
                  "image": "https://example.com/image.jpg",
                  "title": "Book",
                  "description": "Great book",
                  "link": "https://example.com/book"
                },
                {
                  "image": "https://example.com/image.jpg",
                  "title": "Pen",
                  "description": "Great pen",
                  "link": "https://example.com/pen"
                }
              ]
            },
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingDto"
            }
          }
        },
        "required": ["type", "data"]
      }
    }
  }
}
