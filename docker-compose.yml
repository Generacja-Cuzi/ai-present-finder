version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ai-gift-finder-rabbitmq
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ai-present-finder-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # OLX Microservice
  olx-microservice:
    build:
      context: ./backend/olx-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-olx-microservice
    ports:
      - "3020:3020"
    environment:
      - PORT=3020
      - NODE_ENV=production
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
    restart: unless-stopped

  # Allegro Microservice
  allegro-microservice:
    build:
      context: ./backend/allegro-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-allegro-microservice
    ports:
      - "3021:3021"
    environment:
      - PORT=3021
      - NODE_ENV=production
      - ALLEGRO_CLIENT_ID=${ALLEGRO_CLIENT_ID}
      - ALLEGRO_CLIENT_SECRET=${ALLEGRO_CLIENT_SECRET}
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
    restart: unless-stopped

  # Amazon Microservice
  amazon-microservice:
    build:
      context: ./backend/amazon-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-amazon-microservice
    ports:
      - "3022:3022"
    environment:
      - PORT=3022
      - NODE_ENV=production
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
    restart: unless-stopped

  # eBay Microservice
  ebay-microservice:
    build:
      context: ./backend/ebay-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-ebay-microservice
    ports:
      - "3023:3023"
    environment:
      - PORT=3023
      - NODE_ENV=production
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
    restart: unless-stopped

  # Gift Microservice (updated to communicate with other microservices)
  gift-microservice:
    build:
      context: ./backend/gift-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-gift-microservice
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - CLOUDAMQP_URL=amqp://admin:admin@rabbitmq:5672
      - OLX_SERVICE_URL=http://olx-microservice:3020
      - ALLEGRO_SERVICE_URL=http://allegro-microservice:3021
      - AMAZON_SERVICE_URL=http://amazon-microservice:3022
      - EBAY_SERVICE_URL=http://ebay-microservice:3023
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
      - olx-microservice
      - allegro-microservice
      - amazon-microservice
      - ebay-microservice
    restart: unless-stopped

  # Chat Microservice
  chat-microservice:
    build:
      context: ./backend/chat-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-chat-microservice
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=production
      - CLOUDAMQP_URL=amqp://admin:admin@rabbitmq:5672
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
    restart: unless-stopped

  # Stalking Microservice
  stalking-microservice:
    build:
      context: ./backend/stalking-microservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-stalking-microservice
    ports:
      - "3010:3010"
    environment:
      - PORT=3010
      - NODE_ENV=production
      - CLOUDAMQP_URL=amqp://admin:admin@rabbitmq:5672
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
    restart: unless-stopped

  # REST API Macroservice
  restapi-macroservice:
    build:
      context: ./backend/restapi-macroservice
      dockerfile: Dockerfile
    container_name: ai-gift-finder-restapi-macroservice
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=production
      - CLOUDAMQP_URL=amqp://admin:admin@rabbitmq:5672
    networks:
      - ai-present-finder-network
    depends_on:
      - rabbitmq
      - gift-microservice
      - chat-microservice
      - stalking-microservice
    restart: unless-stopped

volumes:
  rabbitmq_data:

networks:
  ai-present-finder-network:
    driver: bridge
