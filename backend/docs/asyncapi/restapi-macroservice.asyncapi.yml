asyncapi: 3.0.0
id: 'urn:ai-present-finder:restapi'
info:
  title: REST API Macroservice AsyncAPI
  version: 2.0.0
  description: >
    AsyncAPI for the REST API macroservice. This service orchestrates the flow
    between microservices

    and the frontend. It publishes events to initiate stalking and chat, and
    subscribes to events

    to notify users via Server-Sent Events (SSE).


    HTTP Endpoints (not covered by AsyncAPI):

    - POST /restapi/stalking-request - Initiates the gift finding process

    - POST /restapi/send-message - Sends user messages during chat interview

    - GET /sse/register - Registers client for SSE notifications

  tags:
    - name: restapi
    - name: sse
      description: >-
        Server-Sent Events delivered over HTTP to frontend clients (see
        SseService in code).
defaultContentType: application/json
servers:
  rabbitmq:
    host: 'admin:admin@localhost:5672'
    pathname: ''
    protocol: amqp
    description: RabbitMQ broker (env CLOUDAMQP_URL supported)
channels:
  StalkingAnalyzeRequestedEvent:
    address: StalkingAnalyzeRequestedEvent
    messages:
      StalkingAnalyzeRequested:
        $ref: '#/components/messages/StalkingAnalyzeRequested'
    description: Queue to request stalking analysis (service publishes).
  ChatStartInterviewEvent:
    address: ChatStartInterviewEvent
    messages:
      ChatStartInterview:
        $ref: '#/components/messages/ChatStartInterview'
    description: Queue to start chat interview (service publishes).
  ChatUserAnsweredEvent:
    address: ChatUserAnsweredEvent
    messages:
      ChatUserAnswered:
        $ref: '#/components/messages/ChatUserAnswered'
    description: Queue to send user's answer to chat service (service publishes).
  ChatQuestionAskedEvent:
    address: ChatQuestionAskedEvent
    messages:
      ChatQuestionAsked:
        $ref: '#/components/messages/ChatQuestionAsked'
    description: Queue to receive questions from chat service.
  ChatCompletedNotifyUserEvent:
    address: ChatCompletedNotifyUserEvent
    messages:
      ChatCompletedNotifyUser:
        $ref: '#/components/messages/ChatCompletedNotifyUser'
    description: Queue to receive interview completion notification.
  ChatInappropriateRequestEvent:
    address: ChatInappropriateRequestEvent
    messages:
      ChatInappropriateRequest:
        $ref: '#/components/messages/ChatInappropriateRequest'
    description: Queue to receive inappropriate request notifications.
  GiftReadyEvent:
    address: GiftReadyEvent
    messages:
      GiftReady:
        $ref: '#/components/messages/GiftReady'
    description: Queue to receive generated gift recommendations.
operations:
  publishStalkingAnalyzeRequested:
    action: send
    channel:
      $ref: '#/channels/StalkingAnalyzeRequestedEvent'
    summary: Initiate stalking analysis for social media profiles
    messages:
      - $ref: >-
          #/channels/StalkingAnalyzeRequestedEvent/messages/StalkingAnalyzeRequested
  publishChatStartInterview:
    action: send
    channel:
      $ref: '#/channels/ChatStartInterviewEvent'
    summary: Initiate chat interview with user
    messages:
      - $ref: '#/channels/ChatStartInterviewEvent/messages/ChatStartInterview'
  publishChatUserAnswered:
    action: send
    channel:
      $ref: '#/channels/ChatUserAnsweredEvent'
    summary: Forward user's chat answer to chat service
    messages:
      - $ref: '#/channels/ChatUserAnsweredEvent/messages/ChatUserAnswered'
  handleChatQuestionAsked:
    action: receive
    channel:
      $ref: '#/channels/ChatQuestionAskedEvent'
    summary: Receive question and send to user via SSE
    messages:
      - $ref: '#/channels/ChatQuestionAskedEvent/messages/ChatQuestionAsked'
  handleChatCompletedNotifyUser:
    action: receive
    channel:
      $ref: '#/channels/ChatCompletedNotifyUserEvent'
    summary: Notify user via SSE that interview is complete
    messages:
      - $ref: >-
          #/channels/ChatCompletedNotifyUserEvent/messages/ChatCompletedNotifyUser
  handleChatInappropriateRequest:
    action: receive
    channel:
      $ref: '#/channels/ChatInappropriateRequestEvent'
    summary: Notify user via SSE about inappropriate behavior
    messages:
      - $ref: >-
          #/channels/ChatInappropriateRequestEvent/messages/ChatInappropriateRequest
  handleGiftReady:
    action: receive
    channel:
      $ref: '#/channels/GiftReadyEvent'
    summary: Receive gift ideas and send to user via SSE
    messages:
      - $ref: '#/channels/GiftReadyEvent/messages/GiftReady'
components:
  messages:
    StalkingAnalyzeRequested:
      name: StalkingAnalyzeRequestedEvent
      title: StalkingAnalyzeRequested
      summary: Request to start stalking analysis for given social URLs.
      contentType: application/json
      payload:
        type: object
        required:
          - chatId
        properties:
          chatId:
            type: string
            description: Unique identifier for the chat session
          facebookUrl:
            type: string
            nullable: true
          instagramUrl:
            type: string
            nullable: true
          tiktokUrl:
            type: string
            nullable: true
          youtubeUrl:
            type: string
            nullable: true
          xUrl:
            type: string
            nullable: true
          linkedinUrl:
            type: string
            nullable: true
    ChatStartInterview:
      name: ChatStartInterviewEvent
      title: ChatStartInterview
      summary: Start chat interview session.
      contentType: application/json
      payload:
        type: object
        required:
          - chatId
        properties:
          chatId:
            type: string
            description: Unique identifier for the chat session
    ChatUserAnswered:
      name: ChatUserAnsweredEvent
      title: ChatUserAnswered
      summary: User answered during chat interview.
      contentType: application/json
      payload:
        type: object
        required:
          - chatId
          - messages
        properties:
          chatId:
            type: string
            description: Unique identifier for the chat session
          messages:
            type: array
            description: Full conversation history including user's latest answer
            items:
              type: object
              properties:
                id:
                  type: string
                sender:
                  type: string
                  enum:
                    - user
                    - assistant
                content:
                  type: string
    ChatQuestionAsked:
      name: ChatQuestionAskedEvent
      title: ChatQuestionAsked
      summary: Question asked by chat service (forwarded to user via SSE).
      contentType: application/json
      payload:
        type: object
        required:
          - chatId
          - question
        properties:
          chatId:
            type: string
          question:
            type: string
    ChatCompletedNotifyUser:
      name: ChatCompletedNotifyUserEvent
      title: ChatCompletedNotifyUser
      summary: 'Interview completed, notify user via SSE.'
      contentType: application/json
      payload:
        type: object
        required:
          - chatId
        properties:
          chatId:
            type: string
    ChatInappropriateRequest:
      name: ChatInappropriateRequestEvent
      title: ChatInappropriateRequest
      summary: Inappropriate behavior detected (forwarded to user via SSE).
      contentType: application/json
      payload:
        type: object
        required:
          - reason
          - chatId
        properties:
          reason:
            type: string
          chatId:
            type: string
    GiftReady:
      name: GiftReadyEvent
      title: GiftReady
      summary: Gift recommendations ready (forwarded to user via SSE).
      contentType: application/json
      payload:
        type: object
        required:
          - chatId
          - giftIdeas
        properties:
          giftIdeas:
            type: array
            items:
              type: object
              properties:
                image:
                  type: string
                  format: uri
                  nullable: true
                title:
                  type: string
                description:
                  type: string
                link:
                  type: string
                  format: uri
                price:
                  type: object
                  nullable: true
          chatId:
            type: string
