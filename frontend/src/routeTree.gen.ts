/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StalkingRouteImport } from './routes/stalking'
import { Route as SavedRouteImport } from './routes/saved'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as HistoryRouteImport } from './routes/history'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatIdRouteImport } from './routes/chat/$id'

const StalkingRoute = StalkingRouteImport.update({
  id: '/stalking',
  path: '/stalking',
  getParentRoute: () => rootRouteImport,
} as any)
const SavedRoute = SavedRouteImport.update({
  id: '/saved',
  path: '/saved',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const HistoryRoute = HistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIdRoute = ChatIdRouteImport.update({
  id: '/chat/$id',
  path: '/chat/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/profile': typeof ProfileRoute
  '/saved': typeof SavedRoute
  '/stalking': typeof StalkingRoute
  '/chat/$id': typeof ChatIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/profile': typeof ProfileRoute
  '/saved': typeof SavedRoute
  '/stalking': typeof StalkingRoute
  '/chat/$id': typeof ChatIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/history': typeof HistoryRoute
  '/profile': typeof ProfileRoute
  '/saved': typeof SavedRoute
  '/stalking': typeof StalkingRoute
  '/chat/$id': typeof ChatIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/history'
    | '/profile'
    | '/saved'
    | '/stalking'
    | '/chat/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/history' | '/profile' | '/saved' | '/stalking' | '/chat/$id'
  id:
    | '__root__'
    | '/'
    | '/history'
    | '/profile'
    | '/saved'
    | '/stalking'
    | '/chat/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HistoryRoute: typeof HistoryRoute
  ProfileRoute: typeof ProfileRoute
  SavedRoute: typeof SavedRoute
  StalkingRoute: typeof StalkingRoute
  ChatIdRoute: typeof ChatIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/stalking': {
      id: '/stalking'
      path: '/stalking'
      fullPath: '/stalking'
      preLoaderRoute: typeof StalkingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/saved': {
      id: '/saved'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof SavedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/$id': {
      id: '/chat/$id'
      path: '/chat/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof ChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HistoryRoute: HistoryRoute,
  ProfileRoute: ProfileRoute,
  SavedRoute: SavedRoute,
  StalkingRoute: StalkingRoute,
  ChatIdRoute: ChatIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
